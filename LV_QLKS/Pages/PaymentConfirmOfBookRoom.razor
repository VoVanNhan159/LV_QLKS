@page "/paymentconfirmofbookroom"
@using Microsoft.Extensions.Configuration
@using LV_QLKS.Data
@using Microsoft.AspNetCore.WebUtilities
@using ShareModel.Custom
@inject IConfiguration Configuration
@layout Layout_Null

@code {

    ShareModel.Orderroom orderroom = new ShareModel.Orderroom();
    List<Orderroomdetail> orderroomdetails = new List<Orderroomdetail>();

    OrderroomService orderroomService = new OrderroomService();
    OrderroomDetailService orderroomDetailService = new OrderroomDetailService();
    AccountService accountService = new AccountService();
    UserService userService = new UserService();
    User customer;
    string phone = "";
    PayLib pay = new PayLib();

    string orderId; //mã hóa đơn
    string vnpayTranId; //mã giao dịch tại hệ thống VNPAY
    string vnp_ResponseCode; //response code: 00 - thành công, khác 00 - xem thêm https://sandbox.vnpayment.vn/apis/docs/bang-ma-loi/
    string vnp_SecureHash = ""; //hash của dữ liệu trả về

    protected override async Task OnInitializedAsync()
    {
        //string query = "https://localhost:7129/PaymentConfirm?vnp_Amount=20000000&vnp_BankCode=NCB&vnp_BankTranNo=VNP13836932&vnp_CardType=ATM&vnp_OrderInfo=Thanh+toan+don+hang&vnp_PayDate=20220917140957&vnp_ResponseCode=00&vnp_TmnCode=M4SI0GQK&vnp_TransactionNo=13836932&vnp_TransactionStatus=00&vnp_TxnRef=637990205718927647&vnp_SecureHash=e33c623ec06ac446f3f81ce0de4c32a2";
        string hashSecret = Configuration.GetSection("AppConfiguration")["HashSecret"]; //Chuỗi bí mật
        var vnpayData = NavigationManager.Uri;
        //lấy toàn bộ dữ liệu được trả về
        int i = 1;
        while (true)
        {
            string key = "";
            string valuetemp = "";
            if (vnpayData[i] != 'v')
            {
                i++;
                continue;
            }
            if (vnpayData[i] == 'v' && vnpayData[i + 1] == 'n' && vnpayData[i + 2] == 'p' && vnpayData[i + 3] == '_')
            {
                key = "";
                // lấy key
                for (int j = i; j < vnpayData.Length; j++)
                {
                    if (vnpayData[j] == '=')
                        // lấy value
                        for (int e = j + 1; e < vnpayData.Length; e++)
                        {
                            if (vnpayData[e] == '&')
                            {
                                i = e + 1;
                                j = e;
                                break;
                            }
                            valuetemp += vnpayData[e];


                        }
                    if (vnpayData[j] == '&')
                    {
                        break;
                    }
                    key += vnpayData[j];


                }
            }
            
            if (i != vnpayData.Length - 1)
                {
                    if (key.StartsWith("vnp_SecureHash"))
                    {
                        key = key.Substring(0, 14);
                        pay.AddResponseData(key, valuetemp);
                        PayLib p = new PayLib();
                        p = pay;
                        break;
                    }

                    else if (key.StartsWith("vnp_BankTranNo"))
                    {
                        string temp = valuetemp.Substring(3);
                        pay.AddResponseData(key, temp);
                    }
                    else
                    {
                        pay.AddResponseData(key, valuetemp);
                    }

            }
        }


            orderId = pay.GetResponseData("vnp_TxnRef"); //mã hóa đơn
            vnpayTranId = pay.GetResponseData("vnp_TransactionNo"); //mã giao dịch tại hệ thống VNPAY
            vnp_ResponseCode = pay.GetResponseData("vnp_ResponseCode"); //response code: 00 - thành công, khác 00 - xem thêm https://sandbox.vnpayment.vn/apis/docs/bang-ma-loi/
            vnp_SecureHash = ""; //hash của dữ liệu trả về
           
            var uri = NavigationManager.ToAbsoluteUri(NavigationManager.Uri);
            var queryStrings = QueryHelpers.ParseQuery(uri.Query);
            if(queryStrings.TryGetValue("vnp_SecureHash", out var name))
            {
                vnp_SecureHash = name;
            }

            bool checkSignature = pay.ValidateSignature(vnp_SecureHash, hashSecret); //check chữ ký đúng hay không?

            if (!checkSignature)
            {
                if (vnp_ResponseCode == "00")
                {
                    //Thanh toán thành công
                    //NavigationManager.NavigateTo("/orderroom/create/"+accountService.Encrypt("2"));
                    //toastService.ShowSuccess("Thanh toán thành công hóa đơn " + orderId + " | Mã giao dịch: " + vnpayTranId,"");
                    
                    try
                        {
                            phone = await sessionStorage.GetItemAsync<string>("customer_phone");
                            customer = await userService.GetUser(phone);
                            Orderroom_Custom orderroom = new Orderroom_Custom();
                            OrderroomDetail_Custom orderroomdetail = new OrderroomDetail_Custom();

                            orderroom.OrderroomDate = DateTime.Now;
                            orderroom.OrderroomDatestart = DateTime.Parse(await sessionStorage.GetItemAsync<string>("dayStartOrder"));
                            orderroom.OrderroomDateend = DateTime.Parse(await sessionStorage.GetItemAsync<string>("dayEndOrder"));
                            orderroom.OrderroomTotalprice = int.Parse(await sessionStorage.GetItemAsync<string>("vnp_Amount"));
                            orderroom.UserPhone = customer.UserPhone;
                            orderroom.OrderroomStatus = "2";//thành công
                            var resod = await orderroomService.AddOrderroomCustom(orderroom);

                            if(resod != null)
                            {
                                orderroomdetail.OrderroomId = resod.OrderroomId;
                                orderroomdetail.RoomId = int.Parse(await sessionStorage.GetItemAsync<string>("room_id"));
                                var resodd = await orderroomDetailService.AddOrderroomdetail(orderroomdetail);
                                if(resodd != null)
                                {
                                    NotificationService.Notify(new NotificationMessage { Severity = NotificationSeverity.Success, Summary = "Thành công", Detail = "Dặt phòng thành công", Duration = 4000 });
                                    await sessionStorage.RemoveItemAsync("vnp_Amount");
                                    NavigationManager.NavigateTo("/orderroom/index");
                                }
                            }
                        }
                        catch(Exception ex)
                        {
                            Console.WriteLine(ex.ToString());
                        }
                }
                else
                {
                    //Thanh toán không thành công. Mã lỗi: vnp_ResponseCode
                    //toastService.ShowWarning("Có lỗi xảy ra trong quá trình xử lý hóa đơn " + orderId + " | Mã giao dịch: " + vnpayTranId + " | Mã lỗi: " + vnp_ResponseCode,"");
                }
            }
            else
            {
                //toastService.ShowError("Không thành công mã là: " + vnp_ResponseCode,"");

            }


            //return Redirect("/Customers/Customers/Routing?X=" + HttpContext.Session.GetString("X") + "&Y=" + HttpContext.Session.GetString("Y"));
            //NavigationManager.NavigateTo("/owner/index/0366037245");
    }
}
